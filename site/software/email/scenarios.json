[
    {
		"email": "testing@us.example.com",
		"valid": true,
		"reason": "Plain address"
	},
	{
		"email": "peter.piper@example.com",
		"valid": true,
        "reason": "Plain address"
	},
	{
		"email": "_somename@example.com",
		"valid": true,
        "reason": "Plain address"
	},
	{
		"email": "user+mailbox@example.com",
		"valid": true,
        "reason": "Plain address"
	},
	{
		"email": "someone@3com.com",
		"valid": true,
		"reason": "RFC 1123 superceded RFC RFC 1035, which would have forbade this domain"
	},
	{
		"email": "testing@somewhere",
		"valid": true,
		"reason": "While \"somewhere\" is not a valid TLD yet, the email address violates no rules"
	},
	{
		"email": "abcdefghijklmnopqrstuvwxyz@abcdefghijklmnopqrstuvwxyz",
		"valid": true,
        "reason": "Plain address"
	},
	{
		"email": "customer/department=shipping@example.com",
		"valid": true,
		"reason": "Uncommon characters"
	},
	{
		"email": "!def!xyz.c%abc+@example.com",
		"valid": true,
		"reason": "Uncommon characters"
	},
	{
		"email": "good@host-name.com",
		"valid": true,
		"reason": "Hosts can have hyphens"
	},
	{
		"email": "1234567890.0987654321@EXAMPLE.WHATEVER.ABC.123.CAT",
		"valid": true,
		"reason": "Some check for letters in the local part"
	},
	{
		"email": "relay.mil%john.smith@EXAMPLE-WHATEVER.ARPA",
		"valid": true,
		"reason": "Old-school relays"
	},
	{
		"email": "test@localhost.com",
		"valid": true,
        "reason": "Some are fooled by localhost"
	},
	{
		"email": "joe@123.45.67.89",
		"valid": true,
		"reason": "IPv4 addresses are valid"
	},
	{
		"email": "joe@2001:0db8::1428:57ab",
		"valid": true,
		"reason": "IPv6 addresses are valid"
	},
	{
		"email": "hello world@example.com",
		"valid": false,
		"reason": "Spaces are not allowed without quoting"
	},
	{
		"email": "moose@example com",
		"valid": false,
		"reason": "Domains with spaces must have brackets"
	},
	{
		"email": "bird@test example.com",
		"valid": false,
        "reason": "Spaces must be quoted"
	},
	{
		"email": "Abc\\\\@example.com",
		"valid": false,
		"reason": "Escaping not allowed without quoting"
	},
	{
		"email": "Abc\\@def@example.com",
		"valid": false,
		"reason": "Escaping not allowed without quoting"
	},
	{
		"email": "Joe.\\\\Blow@example.com",
		"valid": false,
		"reason": "Escaping not allowed without quoting"
	},
	{
		"email": "woo\\ yay@example.com",
		"valid": false,
		"reason": "Escaping not allowed without quoting"
	},
	{
		"email": "\\$A12345@example.com",
		"valid": false,
		"reason": "Escaping not allowed without quoting"
	},
	{
		"email": "abc@def@example.com",
		"valid": false,
		"reason": "Two @ symbols not allowed without brackets or quoting"
	},
	{
		"email": "one\\@two@example.com",
		"valid": false,
		"reason": "Escaping doesn't make it valid either"
	},
	{
		"email": "Abc\\\\@def@example.com",
		"valid": false,
		"reason": "Escaping not allowed without quoting"
	},
	{
		"email": "one\\.two@example.com",
		"valid": false,
		"reason": "Escaping not allowed without quoting"
	},
	{
		"email": "joe@123.456.7.89",
		"valid": false,
		"reason": "This is not a valid IP address"
	},
	{
		"email": "mike@9472:0f6e::1bg0:9876",
		"valid": false,
		"reason": "Invalid IPv6 address"
	},
	{
		"email": "mike@9472:0f6e::1b810:9876",
		"valid": false,
		"reason": "Invalid IPv6 address"
	},
	{
		"email": "\"woo.yay\"@example.com",
		"valid": true,
		"reason": "No need to quote this one, but no reason to not quote either"
	},
	{
		"email": "\"Abc@def\"@example.com",
		"valid": true,
		"reason": "Properly quoted"
	},
	{
		"email": "\"Abc\\@def\"@example.com",
		"valid": true,
		"reason": "Properly quoted, optionally escaped"
	},
	{
		"email": "\"Fred Frederson\"@example.com",
		"valid": true,
		"reason": "Spaces are allowed when quoted"
	},
	{
		"email": "\" Test\"@example.com",
		"valid": true,
		"reason": "Leading spaces may be evil but allowed"
	},
	{
		"email": "\"Fred\\ Frederson\"@example.com",
		"valid": true,
		"reason": "Spaces are allowed and can be escaped"
	},
	{
		"email": "\"Joe.\\\\Test\"@example.com",
		"valid": true,
		"reason": "An escaped backslash"
	},
	{
		"email": "\"abc\\\\\"@example.com",
		"valid": true,
		"reason": "Escaped backslash at the end confuses some parsers"
	},
	{
		"email": "\"\\$A12345\"@example.com",
		"valid": true,
        "reason": "Proper quoting"
	},
	{
		"email": "\"first\".second@employs.allowable.trick",
		"valid": true,
		"reason": "Uses the obsolete, yet valid form"
	},
	{
		"email": "\"Tyler \\\"The Man\\\" A.\"@example.com",
		"valid": true,
		"reason": "Quoted localparts can have escaped quotes"
	},
	{
		"email": "\"Tyler\\ \\\"The\\ Man\\\"\\ A\\.\"@example.com",
		"valid": true,
		"reason": "Escaping a lot more"
	},
	{
		"email": "\"Quote \\\" Quote\"@example.com",
		"valid": true,
		"reason": "Some parsers have issues with the singleton quote"
	},
	{
		"email": "\"\"@the-void.example.com",
		"valid": true,
		"reason": "An empty quoted localpart is valid... somehow"
	},
	{
		"email": "\"two..dot\"@example.com",
		"valid": true,
		"reason": "Double periods are allowed in a quoted localpart"
	},
	{
		"email": "\"quote@example.com",
		"valid": false,
		"reason": "Unbalanced quotes"
	},
	{
		"email": "quote\"@example.com",
		"valid": false,
		"reason": "Unbalanced quotes"
	},
	{
		"email": "quote\\\"@example.com",
		"valid": false,
		"reason": "Escaping doesn't make it valid either"
	},
	{
		"email": "\"Tyler \"The Man\" A.\"@example.com",
		"valid": false,
		"reason": "Quotes in the middle must be escaped"
	},
	{
		"email": "Tyler\\ \\\"The Man\\\"\\ Akins@example.com",
		"valid": false,
		"reason": "Escaping characters requires the localpart to be quoted"
	},
	{
		"email": "Tyler\\ \\\"The Man\\\"\\ A\\.@example.com",
		"valid": false,
		"reason": "Escaping characters requires the localpart to be quoted"
	},
	{
		"email": "\"first.\"second@bad-quoting.info",
		"valid": false,
		"reason": "If the quote and the period were swapped, this would be valid."
	},
	{
		"email": "testingAVeryLongEmailAddressAgainstTheParser.ThisOneShouldBeGood@e.ca",
		"valid": true,
		"reason": "64 characters in the localpart"
	},
	{
		"email": "testingAVeryLongEmailAddressAgainstTheParser.ThisOneIsABadAddress@e.ca",
		"valid": false,
		"reason": "The localpart is one character too long"
	},
	{
		"email": "x@superduperlonglinethatisexactlysixtythreecharactersjustfortests.com",
		"valid": true,
		"reason": "63 letters is the maximum length of a label in the domain"
	},
	{
		"email": "x@superduperlonglinewaymorethansixtythreecharactersforsureblahblah.com",
		"valid": false,
		"reason": "Domain label is one character too long"
	},
	{
		"email": "@example.com",
		"valid": false,
		"reason": "No localpart"
	},
	{
		"email": "doug@",
		"valid": false,
		"reason": "No domain"
	},
	{
		"email": ".dot@example.com",
		"valid": false,
		"reason": "Localpart can not start with a period"
	},
	{
		"email": "dot.@example.com",
		"valid": false,
		"reason": "Localpart can not end with a period"
	},
	{
		"email": "two..dot@example.com",
		"valid": false,
		"reason": "Localpart can not have two successive periods"
	},
	{
		"email": "matt@.example.com",
		"valid": false,
		"reason": "Domain starts with a period"
	},
	{
		"email": "matt@example.com.",
		"valid": false,
		"reason": "Domain ends with a period"
	},
	{
		"email": "timothy@test-host..tld",
		"valid": false,
		"reason": "Domain contains double period"
	},
	{
		"email": "user@???",
		"valid": false,
		"reason": "Top level domain must be all alphabetic"
	},
	{
		"email": "user@domain.c0m",
		"valid": false,
		"reason": "Top level domain must be all alphabetic"
	},
	{
		"email": "user@-example.com",
		"valid": false,
		"reason": "Domain has leading hyphen on a label"
	},
	{
		"email": "user@example-.com",
		"valid": false,
		"reason": "Domain has trailing hyphen on a label"
	},
	{
		"email": "user@test.-example.com",
		"valid": false,
		"reason": "Domain has a leading hyphen on a label"
	},
	{
		"email": "user@test--example.com",
		"valid": false,
		"reason": "Domain has two successive hyphens"
	},
	{
		"email": "test@[example.com]",
		"valid": true,
		"reason": "Bracketed domain"
	},
	{
		"email": "example@[hello world.com]",
		"valid": true,
		"reason": "Bracketed domains can contain spaces"
	},
	{
		"email": "example@[hello\\ world.com]",
		"valid": true,
		"reason": "Bracketed domains can have escaped characters"
	},
	{
		"email": "matt@[test--valid.tld]",
		"valid": false,
		"reason": "Bracketed domains still can't violate the period nor hyphen rules."
	},
	{
		"email": "matt@[-host.tld]",
		"valid": false,
		"reason": "Bracketed domains still can't violate the period nor hyphen rules."
	},
	{
		"email": "matt@[host-.tld]",
		"valid": false,
		"reason": "Bracketed domains still can't violate the period nor hyphen rules."
	},
	{
		"email": "matt@[example..com]",
		"valid": false,
		"reason": "Bracketed domains still can't violate the period nor hyphen rules."
	},
	{
		"email": "matt@[.example.com]",
		"valid": false,
		"reason": "Bracketed domains still can't violate the period nor hyphen rules."
	},
	{
		"email": "matt@[example.com.]",
		"valid": false,
		"reason": "Bracketed domains still can't violate the period nor hyphen rules."
	},
	{
		"email": "matt@[numeric.tld.l33t]",
		"valid": false,
        "reason": "TLDs must be alphabetic, not numeric"
	},
	{
		"email": "test@[hello@world.com]",
		"valid": true,
		"reason": "Yes, domains can have an @ symbol"
	},
	{
		"email": "cat@[example].com",
		"valid": false,
		"reason": "Invalid bracketing"
	},
	{
		"email": "mouse@[test example].com",
		"valid": false,
        "reason": "Spaces are not allowed in brackets"
	},
	{
		"email": "dog@[example.com",
		"valid": false,
        "reason": "Unbalanced brackets"
	},
	{
		"email": "ant@[test\\ example].com",
		"valid": false,
        "reason": "Escaping not allowed in brackets"
	},
    {
        "email": "sam@com",
        "valid": true,
        "reason": "Strangely, the rules allow for a top-level domain to receive email"
    }
]
