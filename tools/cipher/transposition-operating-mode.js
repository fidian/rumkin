"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var o=0;o<t.length;o++){var r=t[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,_toPropertyKey(r.key),r)}}function _createClass(e,t,o){return t&&_defineProperties(e.prototype,t),o&&_defineProperties(e,o),Object.defineProperty(e,"prototype",{writable:!1}),e}function _toPropertyKey(e){e=_toPrimitive(e,"string");return"symbol"===_typeof(e)?e:String(e)}function _toPrimitive(e,t){if("object"!==_typeof(e)||null===e)return e;var o=e[Symbol.toPrimitive];if(void 0===o)return("string"===t?String:Number)(e);o=o.call(e,t||"default");if("object"!==_typeof(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}var Dropdown=require("../../js/mithril/dropdown");module.exports=function(){function r(e){var t=this,o=(_classCallCheck(this,r),e.attrs);o.value||(o.value="NORMAL"),this.operatingMode={options:{NORMAL:"Move only letters, keep capitalization in-place",MOVE_CAPS:"Move only letters, move capitalization with the letter",ALL_CHARS:"Move spaces, punctuation, and move capitalization"},label:"Transposition Operating mode",value:o.value,onchange:function(e){return o.value=t.operatingMode.value,!o.onchange||o.onchange(e)}}}return _createClass(r,[{key:"view",value:function(e){return this.operatingMode.value!==e.attrs.value&&(this.operatingMode.value=e.attrs.value),m(Dropdown,this.operatingMode)}}]),r}();