"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var i=0;i<t.length;i++){var r=t[i];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _createClass(e,t,i){return t&&_defineProperties(e.prototype,t),i&&_defineProperties(e,i),Object.defineProperty(e,"prototype",{writable:!1}),e}var AdvancedInputArea=require("../advanced-input-area"),AlphabetSelector=require("../alphabet-selector"),Checkbox=require("../../../js/mithril/checkbox"),cipherConduitSetup=require("../cipher-conduit-setup"),DirectionSelector=require("../direction-selector"),Result=require("../result"),TextInput=require("../../../js/mithril/text-input");module.exports=function(){function e(){_classCallCheck(this,e),this.direction={value:"ENCRYPT"},this.columnOrder={value:!1,label:"Use the key as a column order instead of column labels"},this.alphabet={value:new rumkinCipher.alphabet.English},this.firstKey={label:"First column key",value:""},this.secondKey={label:"Second column key",value:""},this.dupesBackwards={label:"Number duplicate entries backwards instead of forwards",value:!1},this.input={alphabet:this.alphabet,value:""},this.firstColumnKey=null,this.secondColumnKey=null,cipherConduitSetup(this,"doubleColumnarTransposition")}return _createClass(e,[{key:"view",value:function(){return[m("p",m(DirectionSelector,this.direction)),m("p",m(AlphabetSelector,this.alphabet)),m("p",m(TextInput,this.firstKey)),m("p",this.viewKey(this.firstKey.value,"firstColumnKey")),m("p",m(TextInput,this.secondKey)),m("p",this.viewKey(this.secondKey.value,"secondColumnKey")),m("p",m(Checkbox,this.dupesBackwards)),m("p",m(Checkbox,this.columnOrder)),m("p",m(AdvancedInputArea,this.input)),m("p",this.viewResult())]}},{key:"viewKey",value:function(e,t){return this[t]=rumkinCipher.util.columnKey(this.alphabet.value,e,{columnOrder:this.columnOrder.value,dupesBackwards:this.dupesBackwards.value}),1<this[t].length?m("p","The resulting columnar key: ".concat(this[t].map(function(e){return e+1}).join(" "))):m("p","Enter numbers or words to generate a column key")}},{key:"viewResult",value:function(){if(this.firstColumnKey.length<2||this.secondColumnKey.length<2)return m(Result,"You need at least two columns for each column key in order to encode anything");if(!this.input.value)return m(Result,"Enter text and see the result here");var e=new rumkinCipher.util.Message(this.input.value),t=rumkinCipher.cipher.columnarTransposition,i="ENCRYPT"===this.direction.value,r=i?"encipher":"decipher",e=t[r](e,this.alphabet.value,{columnKey:i?this.firstColumnKey:this.secondColumnKey}),t=t[r](e,this.alphabet.value,{columnKey:i?this.secondColumnKey:this.firstColumnKey});return m(Result,t.toString())}}]),e}();