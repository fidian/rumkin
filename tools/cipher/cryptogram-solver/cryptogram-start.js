"use strict";function _createForOfIteratorHelper(e,r){var t,n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=_unsupportedIterableToArray(e))||r&&e&&"number"==typeof e.length)return n&&(e=n),t=0,{s:r=function(){},n:function(){return t>=e.length?{done:!0}:{done:!1,value:e[t++]}},e:function(e){throw e},f:r};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,i=!0,a=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return i=e.done,e},e:function(e){a=!0,o=e},f:function(){try{i||null==n.return||n.return()}finally{if(a)throw o}}}}function _unsupportedIterableToArray(e,r){if(e){if("string"==typeof e)return _arrayLikeToArray(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);return"Map"===(t="Object"===t&&e.constructor?e.constructor.name:t)||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(e,r):void 0}}function _arrayLikeToArray(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=new Array(r);t<r;t++)n[t]=e[t];return n}function _classCallCheck(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,r,t){return r&&_defineProperties(e.prototype,r),t&&_defineProperties(e,t),Object.defineProperty(e,"prototype",{writable:!1}),e}var AdvancedInputArea=require("../advanced-input-area"),Dropdown=require("../../../js/mithril/dropdown"),session=require("./session"),wordlists=require("./wordlists");module.exports=function(){function e(){var l=this;_classCallCheck(this,e),this.wordlists={label:"Wordlist",value:session.wordlist,options:{}},this.ready=!1,this.input={label:"The cipher text to decode",value:session.cipherText},wordlists.getWordlists().then(function(e){var r,t=l.wordlists.options,n=null,o=!1,i=_createForOfIteratorHelper(e);try{for(i.s();!(r=i.n()).done;){var a=r.value,s=a.filename,n=n||s;s===l.wordlists.value&&(o=!0),t[s]="".concat(a.name,", ").concat(a.wordCount," words")}}catch(e){i.e(e)}finally{i.f()}o||(l.wordlists.value=n),l.ready=!0})}return _createClass(e,[{key:"view",value:function(){var e=this;return[m("p",m(AdvancedInputArea,this.input)),m("p",this.viewWordlist()),m("p",m("button",{disabled:0===this.input.value.trim().length,onclick:function(){session.cipherText=e.input.value.trim(),session.wordlist=e.wordlists.value,m.route.set("/solve")}},"Next step"))]}},{key:"viewWordlist",value:function(){return this.ready?m(Dropdown,this.wordlists):"Loading list of wordlists"}}]),e}();