<?PHP

set_time_limit(0);

$self = 'gpx2html.php';

if (! isset($_SERVER['argv']))
{
    echo "This tool must be ran from the command line.<br>\n";
    Syntax();
}

if (! isset($_SERVER['argv'][1]))
{
    echo "Specify the GPX file as the second parameter.\n";
    Syntax();
}

$gpxfile = $_SERVER['argv'][1];

if (! file_exists($gpxfile) || ! is_file($gpxfile))
{
    echo "$gpxfile is not a file.\n";
    Syntax();
}

$fp = fopen($gpxfile, "r");

if (! $fp)
{
    echo "Unable to open $gpxfile\n";
    exit();
}

$stack = array();
$parser = xml_parser_create();
$WPList = array();

xml_set_element_handler($parser, "start_element", "stop_element");
xml_set_character_data_handler($parser, "char_data");

$buf = fgets($fp, 8192);
while (! feof($fp) && xml_parse($parser, $buf, feof($fp)))
{
    $buf = fgets($fp, 8192);
}
xml_parser_free($parser);
fclose($fp);

ProcessIndex();




function start_element($parser, $name, $attrs)
{
    global $char_data, $stack, $Info;
    
    $Now = join(' ', $stack) . ' ' . $name;
    if ($Now == 'GPX WPT')
    {
	$Info = array('Name' => 'Unknown');
	$Info['RealLat'] = $attrs['LAT'];
	$Info['RealLon'] = $attrs['LON'];
	$Info['Lat'] = ProcessDeg($attrs['LAT'], 'N', 'S');
	$Info['Lon'] = ProcessDeg($attrs['LON'], 'E', 'W', true);
    }
    elseif ($name == 'GROUNDSPEAK:LOG')
    {
	if (! isset($Info['LogNum']))
	{
	    $Info['Logs'] = array();
	    $Info['LogNum'] = 0;
	}
	else
	  $Info['LogNum'] ++;
    }
    $char_data = '';
    array_push($stack, $name);
}

function stop_element($parser, $name)
{
    global $char_data, $stack, $Info, $WPList;
    
    $Now = join(' ', $stack);

    if ($Now == 'GPX WPT')
      ProcessWaypoint($Info);
    elseif ($Now == 'GPX WPT NAME')
      $Info['Name'] = $char_data;
    elseif ($Now == 'GPX WPT URL')
      $Info['URL'] = $char_data;
    elseif ($Now == 'GPX WPT URLNAME')
      $Info['URLName'] = $char_data;
    elseif (strncmp($Now, 'GPX WPT GROUNDSPEAK:CACHE GROUNDSPEAK:LOGS ', 43) == 0)
    {
	if ($name == 'GROUNDSPEAK:DATE')
	  $Info['Logs'][$Info['LogNum']]['Date'] = $char_data;
	elseif ($name == 'GROUNDSPEAK:TYPE')
	  $Info['Logs'][$Info['LogNum']]['Type'] = $char_data;
	elseif ($name == 'GROUNDSPEAK:FINDER')
	  $Info['Logs'][$Info['LogNum']]['Finder'] = $char_data;
	elseif ($name == 'GROUNDSPEAK:TEXT')
	  $Info['Logs'][$Info['LogNum']]['Text'] = HTMLDecode($char_data);
    }
    elseif ($Now == 'GPX WPT GROUNDSPEAK:CACHE GROUNDSPEAK:TRAVELBUGS ' .
    	    'GROUNDSPEAK:TRAVELBUG GROUNDSPEAK:NAME')
    {
	$Info['TravelBugs'][] = $char_data;
    }
    elseif (strncmp($Now, 'GPX WPT GROUNDSPEAK:CACHE ', 26) == 0)
    {
	if ($name == 'GROUNDSPEAK:PLACED_BY')
	  $Info['By'] = $char_data;
	elseif ($name == 'GROUNDSPEAK:TYPE')
	  $Info['Type'] = $char_data;
	elseif ($name == 'GROUNDSPEAK:CONTAINER')
	  $Info['Container'] = $char_data;
	elseif ($name == 'GROUNDSPEAK:DIFFICULTY')
	  $Info['Difficulty'] = $char_data;
	elseif ($name == 'GROUNDSPEAK:TERRAIN')
	  $Info['Terrain'] = $char_data;
	elseif ($name == 'GROUNDSPEAK:SHORT_DESCRIPTION')
	  $Info['Short Desc'] = $char_data;
	elseif ($name == 'GROUNDSPEAK:LONG_DESCRIPTION')
	  $Info['Long Desc'] = $char_data;
	elseif ($name == 'GROUNDSPEAK:ENCODED_HINTS')
	  $Info['Hints'][] = HTMLDecode($char_data);
    }
    
    $elem = array_pop($stack);
}

function char_data($parser, $data)
{
    global $char_data;
    
    $char_data .= $data;
}


function HTMLDecode($str)
{
    $str = str_replace("&gt;", ">", $str);
    $str = str_replace("&lt;", "<", $str);
    $str = str_replace("&amp;", "&", $str);
    $str = str_replace("<br>", "\n", $str);
    
    return $str;
}


function ProcessDeg($deg, $pos, $neg, $three = false)
{
    if ($deg > 0)
    {
	$str = $pos;
    }
    else
    {
	$str = $neg;
	$deg = - $deg;
    }
    
    $d = $deg;
    settype($d, 'integer');
    $deg -= $d;
    if ($three && $d < 100)
      $str .= '0';
    if ($d < 10)
      $str .= '0';
    $str .= $d . '°';
    
    $deg *= 60;
    $deg *= 1000;
    settype($deg, 'integer');
    $deg /= 1000;
    $str .= $deg . "'";
    
    return $str;
}


function Syntax()
{
    echo "php4-cgi gcd2html.php <GCD_FILE>\n";
    exit();
}


function ProcessWaypoint($Info)
{
    global $WPList, $WPToFile;
    
    $html_file = strtolower($Info['Name']);
    $dir = substr($html_file, -1, 1);
    CheckDir($dir);
    $html_file = $dir . '/' . $html_file;
    $WPList[$Info['Name']] = array(
        'Name' => $Info['Name'],
	'URLName' => $Info['URLName'],
        'URL' => $Info['URL'],
	'Lat' => $Info['RealLat'],
	'Lon' => $Info['RealLon'],
        'Difficulty' => $Info['Difficulty'],
	'Terrain' => $Info['Terrain'],
        'Type' => $Info['Type'],
        'File' => $html_file,
    );
    
    $fp = CreateFile($html_file . '.html');
    fwrite($fp, HTMLHeader($Info['Name']));
    fwrite($fp, WaypointDesc($Info));
    fwrite($fp, HTMLFooter());
    fclose($fp);
}



function CreateFile($fn)
{
    $fp = fopen($fn, 'w');
    
    if (! $fp)
    {
	echo "Unable to open $fn for output.\n";
	exit();
    }
    
    return $fp;
}


function HTMLHeader($title)
{
    $s = '<html><head><title>' . htmlspecialchars($title) . '</title>';
    $s .= '</head><body>' . "\n";
    
    return $s;
}


function HTMLFooter()
{
    return '</body></html>';
}


function WaypointDesc($Info)
{
    ob_start();
    
?>
<h1><?= htmlspecialchars($Info['URLName']) ?> -
(<?= $Info['Name'] ?>)</h1>
<h2><?= $Info['Lat'] ?> &nbsp; <?= $Info['Lon'] ?></h2>
<p>By <?= htmlspecialchars($Info['By']) ?></p>

<p><?= $Info['Container'] ?> <?= $Info['Type'] ?>
 (Difficulty <?= $Info['Difficulty'] ?>, 
Terrain <?= $Info['Terrain'] ?>)</p>

<p><a href="<?= $Info['URL'] ?>">Online Page</a></p>

<?PHP if (isset($Info['TravelBugs'])) { ?>
<p>Travel Bugs:
<ul>
<?PHP foreach ($Info['TravelBugs'] as $b) { ?>
<li>* <?= htmlspecialchars($b) ?>
<?PHP } ?>
</ul></p>
<?PHP } ?>
	
<p><?= $Info['Short Desc'] ?></p>

<hr>

<p><?= $Info['Long Desc'] ?></p>

<?PHP if (isset($Info['Hints']) && count($Info['Hints'])) { ?>
<hr>
<p>Hints:
<ul>
<?PHP foreach ($Info['Hints'] as $v) { ?>
<li><?= nl2br(htmlspecialchars($v)) ?>
<?PHP } ?>
</ul>
<?PHP } ?>


<?PHP if (isset($Info['Logs'])) { ?>
<hr>
<?PHP foreach ($Info['Logs'] as $l) { ?>
<p><b><?= htmlspecialchars($l['Finder']) ?></b>
(<?= htmlspecialchars($l['Type']) ?>)
<em><?= substr($l['Date'], 0, 10); ?></em><br>
<?= nl2br(htmlspecialchars($l['Text'])) ?></p>
<?PHP } ?>
<?PHP } ?>
<?PHP
    
    $s = ob_get_contents();
    ob_end_clean();
    
    return $s;
}


function ProcessIndex()
{
    global $WPList;
    
    // Write CSV file
    $fp = CreateFile('Geocaching.csv');
    fwrite($fp, "Name,Latitude,Longitude,Name 2,URL,Type\n");
    foreach ($WPList as $WP)
    {
	fwrite($fp, $WP['Name'] . ',');
	fwrite($fp, $WP['Lat'] . ',');
	fwrite($fp, $WP['Lon'] . ',');
	fwrite($fp, SafeCSV($WP['URLName'] . ' ' . $WP['Type'] . ' (' .
			    $WP['Difficulty'] . '/' . $WP['Terrain'] . 
			    ')') . ',');
	fwrite($fp, 'file:///C:/GPX/' . $WP['File'] . ".html\r\n");
    }
    fclose($fp);
    
    // Write Index HTML
    WriteIndex();
}

// CSV format for MS S&T
//Name,Latitude,Longitude,Name 2,URL,Type
//GCxxxx,45.12345,94.12345,The cache by someone Traditional (1/1.5),d/gcxxxx.html

function SafeCSV($str)
{
    $str = str_replace('"', '""', $str);
    
    return '"' . $str . '"';
}


function WriteIndex()
{
    global $WPList;
    
    $fp = CreateFile('index.html');
    fwrite($fp, HTMLHeader('GCD Index'));
    fwrite($fp, '<p>Pick Cache by Waypoint:</p>' . "\n");
    $ByLetter = array();
    foreach (array_keys($WPList) as $k)
    {
	if (! isset($ByLetter[$k[2]]))
	  $ByLetter[$k[2]] = array();
	$ByLetter[$k[2]][] = $k;
    }
    ksort($ByLetter);
    fwrite($fp, '<p>GC... :: ');
    CheckDir('wp');
    foreach ($ByLetter as $letter => $hits)
    {
	$url = 'wp/' . $letter . '.html';
	fwrite($fp, '<a href="' . $url . '">' . $letter . '</a> ');
	WriteSubWPIndex($letter, $url, $hits);
    }
    fwrite($fp, "</p>\n");

    
    fwrite($fp, "<p>Pick Cache by Name</p>\n");
    
    $picker = array();
    CheckDir('name');
    foreach ($WPList as $k => $wp)
    {
	$name = $wp['URLName'];
	$name = strtoupper($name);
	$name = preg_replace('/[^A-Z0-9]/', '', $name);
	if (! isset($picker[$name[0]]))
	  $picker[$name[0]] = array();
	$picker[$name[0]][$name] = $wp;
    }
    
    ksort($picker);
    fwrite($fp, '<p>');
    CheckDir('name');
    foreach ($picker as $letter => $hits)
    {
	$url = 'name/' . $letter . '.html';
	fwrite($fp, '<a href="' . $url . '">' . $letter . '</a> ');
	WriteSubIndex($letter, $url, $hits);
    }
    fwrite($fp, "</p>\n");
    fwrite($fp, HTMLFooter());
    fclose($fp);
}


function CheckDir($dir)
{
    if (! is_dir($dir))
    {
	if (! mkdir($dir))
	{
	    echo "Unable to make directory $dir\n";
	    exit();
	}
    }
}


function WriteSubIndex($letter, $url, $hits)
{
    global $WPList;
    
    $fp = CreateFile($url);
    fwrite($fp, HTMLHeader("Caches : $letter"));

    ksort($hits);
    fwrite($fp, '<p>');
    foreach ($hits as $name => $wp)
    {
	fwrite($fp, '<a href="../' . $wp['File'] . '.html">' . 
	       htmlspecialchars($wp['URLName']) . "</a><br>\n");
    }
    fwrite($fp, "</p>\n");
    fwrite($fp, HTMLFooter());
    fclose($fp);
}


function WriteSubWPIndex($letter, $url, $hits)
{
    global $WPList;
    
    $fp = CreateFile($url);
    fwrite($fp, HTMLHeader("Waypoints : GC$letter..."));

    sort($hits);
    fwrite($fp, '<p>');
    foreach ($hits as $k)
    {
	fwrite($fp, '<a href="../' . $WPList[$k]['File'] . '.html">' .
	       $k . "</a><br>\n");
    }
    fwrite($fp, "</p>\n");
    fwrite($fp, HTMLFooter());
    fclose($fp);
}
